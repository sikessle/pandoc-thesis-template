Automatically generated by Mendeley Desktop 1.15.3
Any changes to this file will be lost if it is regenerated by Mendeley.

BibTeX export options can be customized via Preferences -> BibTeX in Mendeley Desktop

@article{Fielding2000,
abstract = {The World Wide Web has succeeded in the large part because its$\backslash$nsoftware architecture has been designed to meet the needs of an$\backslash$nInternet-scale distributed hypermedia system. The modern Web$\backslash$narchitecture emphasizes scalability of component interactions,$\backslash$ngenerality of interfaces, independent deployment of components, and$\backslash$nintermediary components to reduce interaction latency, enforce security,$\backslash$nand encapsulate legacy systems. We introduce the Representational State$\backslash$nTransfer (REST) architectural style, developed as an abstract model of$\backslash$nthe Web architecture to guide our redesign and definition of the$\backslash$nHypertext Transfer Protocol and Uniform Resource Identifiers. We$\backslash$ndescribe the software engineering principles guiding REST and the$\backslash$ninteraction constraints chosen to retain those principles, contrasting$\backslash$nthem to the constraints of other architectural styles. We then compare$\backslash$nthe abstract model to the currently deployed Web architecture in order$\backslash$nto elicit mismatches between the existing protocols and the applications$\backslash$nthey are intended to support},
archivePrefix = {arXiv},
arxivId = {10.1145/514183.514185},
author = {Fielding, R.T. and Taylor, R.N.},
doi = {10.1109/ICSE.2000.870431},
eprint = {514183.514185},
file = {:Users/sikessle/Dropbox/Studium/M.Sc. MSI/Masterarbeit/Master Thesis/literature-documents/Fielding, Taylor - 2000 - Principled design of the modern Web architecture.pdf:pdf},
isbn = {1-58113-206-9},
issn = {0270-5257},
journal = {Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium},
number = {2},
pages = {115--150},
primaryClass = {10.1145},
title = {{Principled design of the modern Web architecture}},
volume = {2},
year = {2000}
}
@article{Schindler2013,
abstract = {The advent of the so-called NoSQL databases has brought about a new model of using storage systems. While traditional relational database systems took advantage of features offered by centrally-managed, enterprise-class storage arrays, the new generation of database systems with weaker data consistency models is content with using and manag- ing locally attached individual storage devices and providing data reliability and availability through high-level software features and protocols. This tutorial aims to review the architecture of selected NoSQL DBs to lay the foundations for understanding how these new DB systems behave. In particular, it focuses on how (in)efficiently these new systems use I/O and other resources to accomplish their work. The tutorial examines the behavior of several NoSQL DBs with an emphasis on Cassandra - a popular NoSQL DB system. It uses I/O traces and resource utilization profiles captured in private cloud deployments that use both dedicated directly attached storage as well as shared networked storage.},
author = {Schindler, Jiri},
doi = {10.1145/2494232.2479782},
file = {:Users/sikessle/Dropbox/Studium/M.Sc. MSI/Masterarbeit/Master Thesis/literature-documents/Schindler - 2013 - Profiling and analyzing the IO performance of NoSQL DBs.pdf:pdf},
isbn = {978-1-4503-1900-3},
issn = {01635999},
journal = {ACM SIGMETRICS Performance Evaluation Review},
keywords = {NoSQL databases},
month = {jun},
number = {1},
pages = {389--390},
publisher = {ACM},
title = {{Profiling and analyzing the I/O performance of NoSQL DBs}},
url = {http://dl.acm.org/citation.cfm?id=2494232.2479782},
volume = {41},
year = {2013}
}
